#!groovy

/**
 * This program and the accompanying materials are made available under the terms of the
 * Eclipse Public License v2.0 which accompanies this distribution, and is available at
 * https://www.eclipse.org/legal/epl-v20.html
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 * Copyright IBM Corporation 2018, 2019
 */


node('zowe-dependency-scanning') {

  def DEPENDENCY_SCAN_HOME = "/home/jenkins/dependency-scan"
  def OWASP_CHECK_HOME = "/home/jenkins/dependency-check"

  def lib = library("jenkins-library").org.zowe.jenkins_shared_library

  def pipeline = lib.pipelines.generic.GenericPipeline.new(this)

  pipeline.admins.add("markackert")

  def registry = lib.npm.Registry.new(this);
  registry.init(
      registry: lib.Constants.DEFAULT_NPM_PRIVATE_REGISTRY_INSTALL,
      email: lib.Constants.DEFAULT_NPM_PRIVATE_REGISTRY_EMAIL,
      usernamePasswordCredential: lib.Constants.DEFAULT_NPM_PRIVATE_REGISTRY_CREDENTIAL
  );
  registry.login();

  pipeline.setup(
    github: [
      email                      : lib.Constants.DEFAULT_GITHUB_ROBOT_EMAIL,
      usernamePasswordCredential : lib.Constants.DEFAULT_GITHUB_ROBOT_CREDENTIAL,
    ]
  );

  pipeline.build(
    name          : "Scan All Zowe Projects",
    timeout       : [time: 500, unit: 'MINUTES'],
    isSkippable   : false,
    environment   : [
      OWASP_CLI_BIN_PATH      :"${OWASP_CHECK_HOME}/bin",
      APP_OWASP_SCAN          : true
    ],
    operation     : {
        dir("${DEPENDENCY_SCAN_HOME}") {
            sh "npm set registry ${lib.Constants.DEFAULT_NPM_PRIVATE_REGISTRY_INSTALL}"
            sh "echo always-auth=true >> ~/.npmrc"
            sh "cp ~/.npmrc resources/private_npmrc/.npmrc"
            sh "yarn install && yarn build"
            sh "node lib/index.js"
            sh "cd build && zip -r logs.zip logs/"
            sh "cd build && zip -r reports.zip owasp_reports/"
        }
    }
  )

  pipeline.createStage(
      name: "Publish Logs",
      stage: {
          dir("${DEPENDENCY_SCAN_HOME}/build") {
            archiveArtifacts artifacts: "logs.zip"
          }
      }
  )

    pipeline.createStage(
      name: "Publish OWASP Reports [Zipped]",
      stage: {
          dir("${DEPENDENCY_SCAN_HOME}/build") {
            archiveArtifacts artifacts: "reports.zip"
          }
      }
  )

  pipeline.end()
}